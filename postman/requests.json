{
	"variables": [],
	"info": {
		"name": "CMIServerless",
		"_postman_id": "a483a564-b927-91a2-2173-98110c4435de",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Bootstrap",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 201;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"repositoryId is 'default'\"] = jsonData.repositoryId === \"default\";",
							"tests[\"repositoryName is 'CMIServerless'\"] = jsonData.repositoryName === \"CMIServerless\";",
							"tests[\"cmisVersionSupported is '1.1'\"] = jsonData.cmisVersionSupported === \"1.1\";",
							"tests[\"rootFolderId is present\"] = jsonData.rootFolderId !== undefined;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/bootstrap",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"repositoryId\": \"default\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get repositories",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"var defaultObject = jsonData.default;",
							"var capabilitiesObject = defaultObject.capabilities;",
							"var baseUrl = postman.getEnvironmentVariable(\"host\") + postman.getEnvironmentVariable(\"stage\");",
							"var repoUrl = baseUrl + \"/default\";",
							"var rootUrl = repoUrl + \"/object\";",
							"",
							"tests[\"default object is present\"] = defaultObject !== undefined;",
							"tests[\"repositoryId is 'default'\"] = defaultObject.repositoryId === \"default\";",
							"tests[\"productName is 'CMIServerless'\"] = defaultObject.productName === \"CMIServerless\";",
							"tests[\"productVersion is '0.1'\"] = defaultObject.productVersion === \"0.1\";",
							"tests[\"cmisVersionSupported is '1.1'\"] = defaultObject.cmisVersionSupported === \"1.1\";",
							"tests[\"repositoryUrl is correct\"] = defaultObject.repositoryUrl === repoUrl;",
							"tests[\"rootFolderUrl is correct\"] = defaultObject.rootFolderUrl === rootUrl;",
							"tests[\"capabilityQuery is 'none'\"] = capabilitiesObject.capabilityQuery === \"none\";",
							"tests[\"capabilityGetFolderTree is 'false'\"] = capabilitiesObject.capabilityGetFolderTree === false;",
							"",
							"// store the root folder id ",
							"var rootFolderId = defaultObject.rootFolderId;",
							"postman.setGlobalVariable(\"rootFolderId\", rootFolderId);",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get root folder",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"var propertiesObject = jsonData.properties;",
							"",
							"tests[\"properties object is present\"] = propertiesObject !== undefined;",
							"",
							"var objectIdObject = propertiesObject[\"cmis:objectId\"];",
							"tests[\"cmis:objectId object is present\"] = objectIdObject !== undefined;",
							"tests[\"cmis:objectId id is 'cmis:objectId'\"] = objectIdObject.id === \"cmis:objectId\";",
							"tests[\"cmis:objectId localName is 'objectId'\"] = objectIdObject.localName === \"objectId\";",
							"tests[\"cmis:objectId displayName is 'Object Id'\"] = objectIdObject.displayName === \"Object Id\";",
							"tests[\"cmis:objectId queryName is 'cmis:objectId'\"] = objectIdObject.queryName === \"cmis:objectId\";",
							"tests[\"cmis:objectId type is 'id'\"] = objectIdObject.type === \"id\";",
							"tests[\"cmis:objectId cardinality is 'single'\"] = objectIdObject.cardinality === \"single\";",
							"tests[\"cmis:objectId value is '\" + postman.getGlobalVariable(\"rootFolderId\") + \"'\"] = objectIdObject.value === postman.getGlobalVariable(\"rootFolderId\");",
							"",
							"tests[\"cmis:description object is present\"] = propertiesObject[\"cmis:description\"] !== undefined;",
							"tests[\"cmis:description value is 'Root Folder'\"] = propertiesObject[\"cmis:description\"].value === \"Root Folder\";",
							"",
							"tests[\"cmis:baseTypeId object is present\"] = propertiesObject[\"cmis:baseTypeId\"] !== undefined;",
							"tests[\"cmis:baseTypeId value is 'cmis:folder'\"] = propertiesObject[\"cmis:baseTypeId\"].value === \"cmis:folder\";",
							"",
							"var now = new Date().getTime();",
							"tests[\"cmis:lastModificationDate object is present\"] = propertiesObject[\"cmis:lastModificationDate\"] !== undefined;",
							"tests[\"cmis:lastModificationDate value is less than now\"] = propertiesObject[\"cmis:lastModificationDate\"].value < now;",
							"",
							"tests[\"cmis:creationDate object is present\"] = propertiesObject[\"cmis:creationDate\"] !== undefined;",
							"tests[\"cmis:creationDate value is less than now\"] = propertiesObject[\"cmis:creationDate\"].value < now;",
							"",
							"tests[\"cmis:createdBy object is present\"] = propertiesObject[\"cmis:createdBy\"] !== undefined;",
							"tests[\"cmis:createdBy value is 'system'\"] = propertiesObject[\"cmis:createdBy\"].value === \"system\";",
							"",
							"tests[\"cmis:lastModifiedBy object is present\"] = propertiesObject[\"cmis:lastModifiedBy\"] !== undefined;",
							"tests[\"cmis:lastModifiedBy value is 'system'\"] = propertiesObject[\"cmis:lastModifiedBy\"].value === \"system\";",
							"",
							"tests[\"cmis:objectTypeId object is present\"] = propertiesObject[\"cmis:objectTypeId\"] !== undefined;",
							"tests[\"cmis:objectTypeId value is 'cmis:folder'\"] = propertiesObject[\"cmis:objectTypeId\"].value === \"cmis:folder\";",
							"",
							"tests[\"cmis:name object is present\"] = propertiesObject[\"cmis:name\"] !== undefined;",
							"tests[\"cmis:name value is 'Root Folder'\"] = propertiesObject[\"cmis:name\"].value === \"Root Folder\";",
							"",
							"tests[\"cmis:parentId object is present\"] = propertiesObject[\"cmis:parentId\"] === undefined;",
							"",
							"tests[\"cmis:path object is present\"] = propertiesObject[\"cmis:path\"] !== undefined;",
							"tests[\"cmis:path value is '/'\"] = propertiesObject[\"cmis:path\"].value === \"/\";",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default/object?objectId={{rootFolderId}}&cmisselector=object",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get object (succinct)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"var succinctPropertiesObject = jsonData.succinctProperties;",
							"",
							"tests[\"succinctProperties object is present\"] = succinctPropertiesObject !== undefined;",
							"",
							"var objectIdObject = succinctPropertiesObject[\"cmis:objectId\"];",
							"tests[\"cmis:objectId object is present\"] = objectIdObject !== undefined;",
							"",
							"tests[\"cmis:objectId value is '\" + postman.getGlobalVariable(\"rootFolderId\") + \"'\"] = succinctPropertiesObject[\"cmis:objectId\"] === postman.getGlobalVariable(\"rootFolderId\");",
							"",
							"tests[\"cmis:description value is 'Root Folder'\"] = succinctPropertiesObject[\"cmis:description\"] === \"Root Folder\";",
							"",
							"tests[\"cmis:baseTypeId value is 'cmis:folder'\"] = succinctPropertiesObject[\"cmis:baseTypeId\"] === \"cmis:folder\";",
							"",
							"var now = new Date().getTime();",
							"tests[\"cmis:lastModificationDate value is less than now\"] = succinctPropertiesObject[\"cmis:lastModificationDate\"] < now;",
							"",
							"tests[\"cmis:creationDate value is less than now\"] = succinctPropertiesObject[\"cmis:creationDate\"] < now;",
							"",
							"tests[\"cmis:createdBy value is 'system'\"] = succinctPropertiesObject[\"cmis:createdBy\"] === \"system\";",
							"",
							"tests[\"cmis:lastModifiedBy value is 'system'\"] = succinctPropertiesObject[\"cmis:lastModifiedBy\"] === \"system\";",
							"",
							"tests[\"cmis:objectTypeId value is 'cmis:folder'\"] = succinctPropertiesObject[\"cmis:objectTypeId\"] === \"cmis:folder\";",
							"",
							"tests[\"cmis:name value is 'Root Folder'\"] = succinctPropertiesObject[\"cmis:name\"] === \"Root Folder\";",
							"",
							"tests[\"cmis:path value is '/'\"] = succinctPropertiesObject[\"cmis:path\"] === \"/\";",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default/object?objectId={{rootFolderId}}&cmisselector=object&succinct=true",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get object (allowableActions)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// test succinct properties",
							"var succinctPropertiesObject = jsonData.succinctProperties;",
							"tests[\"succinctProperties object is present\"] = succinctPropertiesObject !== undefined;",
							"",
							"var objectIdObject = succinctPropertiesObject[\"cmis:objectId\"];",
							"tests[\"cmis:objectId object is present\"] = objectIdObject !== undefined;",
							"",
							"tests[\"cmis:objectId value is '\" + postman.getGlobalVariable(\"rootFolderId\") + \"'\"] = succinctPropertiesObject[\"cmis:objectId\"] === postman.getGlobalVariable(\"rootFolderId\");",
							"",
							"tests[\"cmis:description value is 'Root Folder'\"] = succinctPropertiesObject[\"cmis:description\"] === \"Root Folder\";",
							"",
							"tests[\"cmis:baseTypeId value is 'cmis:folder'\"] = succinctPropertiesObject[\"cmis:baseTypeId\"] === \"cmis:folder\";",
							"",
							"var now = new Date().getTime();",
							"tests[\"cmis:lastModificationDate value is less than now\"] = succinctPropertiesObject[\"cmis:lastModificationDate\"] < now;",
							"",
							"tests[\"cmis:creationDate value is less than now\"] = succinctPropertiesObject[\"cmis:creationDate\"] < now;",
							"",
							"tests[\"cmis:createdBy value is 'system'\"] = succinctPropertiesObject[\"cmis:createdBy\"] === \"system\";",
							"",
							"tests[\"cmis:lastModifiedBy value is 'system'\"] = succinctPropertiesObject[\"cmis:lastModifiedBy\"] === \"system\";",
							"",
							"tests[\"cmis:objectTypeId value is 'cmis:folder'\"] = succinctPropertiesObject[\"cmis:objectTypeId\"] === \"cmis:folder\";",
							"",
							"tests[\"cmis:name value is 'Root Folder'\"] = succinctPropertiesObject[\"cmis:name\"] === \"Root Folder\";",
							"",
							"tests[\"cmis:path value is '/'\"] = succinctPropertiesObject[\"cmis:path\"] === \"/\";",
							"",
							"// test allowable actions",
							"var actionsObject = jsonData.allowableActions;",
							"tests[\"allowableActions object is present\"] = actionsObject !== undefined;",
							"",
							"tests[\"canDeleteObject is 'false'\"] = !actionsObject.canDeleteObject;",
							"tests[\"canUpdateProperties is 'false'\"] = !actionsObject.canUpdateProperties;",
							"tests[\"canGetFolderTree is 'false'\"] = !actionsObject.canGetFolderTree;",
							"tests[\"canGetProperties is 'true'\"] = actionsObject.canGetProperties;",
							"tests[\"canGetObjectRelationships is 'false'\"] = !actionsObject.canGetObjectRelationships;",
							"tests[\"canGetObjectParents is 'false'\"] = !actionsObject.canGetObjectParents;",
							"tests[\"canGetFolderParent is 'false'\"] = !actionsObject.canGetFolderParent;",
							"tests[\"canGetDescendants is 'false'\"] = !actionsObject.canGetDescendants;",
							"tests[\"canMoveObject is 'false'\"] = !actionsObject.canMoveObject;",
							"tests[\"canDeleteContentStream is 'false'\"] = !actionsObject.canDeleteContentStream;",
							"tests[\"canCheckOut is 'false'\"] = !actionsObject.canCheckOut;",
							"tests[\"canCancelCheckOut is 'false'\"] = !actionsObject.canCancelCheckOut;",
							"tests[\"canCheckIn is 'false'\"] = !actionsObject.canCheckIn;",
							"tests[\"canSetContentStream is 'false'\"] = !actionsObject.canSetContentStream;",
							"tests[\"canGetAllVersions is 'false'\"] = !actionsObject.canGetAllVersions;",
							"tests[\"canAddObjectToFolder is 'false'\"] = !actionsObject.canAddObjectToFolder;",
							"tests[\"canRemoveObjectFromFolder is 'false'\"] = !actionsObject.canRemoveObjectFromFolder;",
							"tests[\"canGetContentStream is 'true'\"] = actionsObject.canGetContentStream;",
							"tests[\"canApplyPolicy is 'false'\"] = !actionsObject.canApplyPolicy;",
							"tests[\"canGetAppliedPolicies is 'false'\"] = !actionsObject.canGetAppliedPolicies;",
							"tests[\"canRemovePolicy is 'false'\"] = !actionsObject.canRemovePolicy;",
							"tests[\"canGetChildren is 'true'\"] = actionsObject.canGetChildren;",
							"tests[\"canCreateDocument is 'false'\"] = !actionsObject.canCreateDocument;",
							"tests[\"canCreateFolder is 'true'\"] = actionsObject.canCreateFolder;",
							"tests[\"canCreateRelationship is 'false'\"] = !actionsObject.canCreateRelationship;",
							"tests[\"canCreateItem is 'false'\"] = !actionsObject.canCreateItem;",
							"tests[\"canDeleteTree is 'false'\"] = !actionsObject.canDeleteTree;",
							"tests[\"canGetRenditions is 'false'\"] = !actionsObject.canGetRenditions;",
							"tests[\"canGetACL is 'false'\"] = !actionsObject.canGetACL;",
							"tests[\"canApplyACL is 'false'\"] = !actionsObject.canApplyACL;",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default/object?objectId={{rootFolderId}}&cmisselector=object&succinct=true&includeAllowableActions=true",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get a type definition",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// test type data",
							"tests[\"localName is 'folder'\"] = jsonData.localName === \"folder\";",
							"tests[\"localNamespace is 'http://apache.org'\"] = jsonData.localNamespace === \"http://apache.org\";",
							"tests[\"baseId is 'cmis:folder'\"] = jsonData.baseId === \"cmis:folder\";",
							"tests[\"displayName is 'Folder'\"] = jsonData.displayName === \"Folder\";",
							"tests[\"description is 'Folder'\"] = jsonData.description === \"Folder\";",
							"tests[\"typeId is 'cmis:folder'\"] = jsonData.typeId === \"cmis:folder\";",
							"tests[\"controllableACL is 'true'\"] = jsonData.controllableACL;",
							"tests[\"fileable is 'true'\"] = jsonData.fileable;",
							"tests[\"includedInSupertypeQuery is 'true'\"] = jsonData.includedInSupertypeQuery;",
							"tests[\"fulltextIndexed is 'false'\"] = !jsonData.fulltextIndexed;",
							"tests[\"creatable is 'true'\"] = jsonData.creatable;",
							"tests[\"controllablePolicy is 'true'\"] = jsonData.controllablePolicy;",
							"tests[\"queryable is 'false'\"] = !jsonData.queryable;",
							"tests[\"queryName is 'cmis:folder'\"] = jsonData.queryName === \"cmis:folder\";",
							"tests[\"id is 'cmis:folder'\"] = jsonData.id === \"cmis:folder\";",
							"",
							"// test type mutability",
							"var typeMutabilityObject = jsonData.typeMutability;",
							"tests[\"typeMutability object is present\"] = typeMutabilityObject !== undefined;",
							"tests[\"typeMutability update is 'false'\"] = !typeMutabilityObject.update;",
							"tests[\"typeMutability delete is 'false'\"] = !typeMutabilityObject.delete;",
							"tests[\"typeMutability create is 'true'\"] = typeMutabilityObject.create;",
							"",
							"// test property definitions",
							"var propertyDefsObject = jsonData.propertyDefinitions;",
							"tests[\"propertyDefinitions object is present\"] = propertyDefsObject !== undefined;",
							"",
							"var objectIdObject = propertyDefsObject[\"cmis:objectId\"];",
							"tests[\"cmis:objectId object is present\"] = objectIdObject !== undefined;",
							"tests[\"cmis:objectId id is 'cmis:objectId'\"] = objectIdObject.id === \"cmis:objectId\";",
							"tests[\"cmis:objectId orderable is 'false'\"] = !objectIdObject.oderable;",
							"tests[\"cmis:objectId localName is 'objectId'\"] = objectIdObject.localName === \"objectId\";",
							"tests[\"cmis:objectId propertyType is 'id'\"] = objectIdObject.propertyType === \"id\";",
							"tests[\"cmis:objectId queryName is 'cmis:objectId'\"] = objectIdObject.queryName === \"cmis:objectId\";",
							"tests[\"cmis:objectId updatability is 'readonly'\"] = objectIdObject.updatability === \"readonly\";",
							"tests[\"cmis:objectId description is 'Object Id'\"] = objectIdObject.description === \"Object Id\";",
							"tests[\"cmis:objectId inherited is 'false'\"] = !objectIdObject.inherited;",
							"tests[\"cmis:objectId required is 'false'\"] = !objectIdObject.required;",
							"tests[\"cmis:objectId displayName is 'Object Id'\"] = objectIdObject.displayName === \"Object Id\";",
							"tests[\"cmis:objectId cardinality is 'single'\"] = objectIdObject.cardinality === \"single\";",
							"tests[\"cmis:objectId queryable is 'false'\"] = !objectIdObject.queryable;",
							"",
							"// test presence of other properties",
							"tests[\"cmis:allowedChildObjectTypeIds object is present\"] = propertyDefsObject[\"cmis:allowedChildObjectTypeIds\"] !== undefined;",
							"tests[\"cmis:path object is present\"] = propertyDefsObject[\"cmis:path\"] !== undefined;",
							"tests[\"cmis:objectTypeId object is present\"] = propertyDefsObject[\"cmis:objectTypeId\"] !== undefined;",
							"tests[\"cmis:name object is present\"] = propertyDefsObject[\"cmis:name\"] !== undefined;",
							"tests[\"cmis:creationDate object is present\"] = propertyDefsObject[\"cmis:creationDate\"] !== undefined;",
							"tests[\"cmis:secondaryObjectTypeIds object is present\"] = propertyDefsObject[\"cmis:secondaryObjectTypeIds\"] !== undefined;",
							"tests[\"cmis:changeToken object is present\"] = propertyDefsObject[\"cmis:changeToken\"] !== undefined;",
							"tests[\"cmis:lastModifiedBy object is present\"] = propertyDefsObject[\"cmis:lastModifiedBy\"] !== undefined;",
							"tests[\"cmis:createdBy object is present\"] = propertyDefsObject[\"cmis:createdBy\"] !== undefined;",
							"tests[\"cmis:baseTypeId object is present\"] = propertyDefsObject[\"cmis:baseTypeId\"] !== undefined;",
							"tests[\"cmis:description object is present\"] = propertyDefsObject[\"cmis:description\"] !== undefined;",
							"tests[\"cmis:lastModificationDate object is present\"] = propertyDefsObject[\"cmis:lastModificationDate\"] !== undefined;",
							"tests[\"cmis:parentId object is present\"] = propertyDefsObject[\"cmis:parentId\"] !== undefined;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default?cmisselector=typeDefinition&typeId=cmis:folder",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get type descendants",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"empty array is present\"] = jsonData.length === 0;"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default?cmisselector=typeDescendants&typeId=cmis:folder",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get children",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// test objects array",
							"var objectsArray = jsonData.objects;",
							"tests[\"objects array is present\"] = objectsArray !== undefined;",
							"tests[\"objects array is not empty\"] = objectsArray.length > 0;",
							"",
							"// test the first array entry",
							"var firstEntry = objectsArray[0];",
							"tests[\"firstEntry is present\"] = firstEntry !== undefined;",
							"",
							"// test succinctProperties",
							"var succinctPropertiesObject = firstEntry.object.succinctProperties;",
							"tests[\"succinctProperties object is present\"] = succinctPropertiesObject !== undefined;",
							"tests[\"cmis:objectId is present\"] = succinctPropertiesObject[\"cmis:objectId\"] !== undefined;",
							"tests[\"cmis:baseTypeId is present\"] = succinctPropertiesObject[\"cmis:objectId\"] !== undefined;",
							"tests[\"cmis:lastModificationDate is present\"] = succinctPropertiesObject[\"cmis:lastModificationDate\"] !== undefined;",
							"tests[\"cmis:creationDate is present\"] = succinctPropertiesObject[\"cmis:creationDate\"] !== undefined;",
							"tests[\"cmis:createdBy is present\"] = succinctPropertiesObject[\"cmis:createdBy\"] !== undefined;",
							"tests[\"cmis:parentId is present\"] = succinctPropertiesObject[\"cmis:parentId\"] !== undefined;",
							"tests[\"cmis:lastModifiedBy is present\"] = succinctPropertiesObject[\"cmis:lastModifiedBy\"] !== undefined;",
							"tests[\"cmis:name is present\"] = succinctPropertiesObject[\"cmis:name\"] !== undefined;",
							"tests[\"cmis:objectTypeId is present\"] = succinctPropertiesObject[\"cmis:objectTypeId\"] !== undefined;",
							"",
							"if (succinctPropertiesObject[\"cmis:baseTypeId\"] === \"cmis:folder\") {",
							"    tests[\"cmis:path is present\"] = succinctPropertiesObject[\"cmis:path\"] !== undefined;",
							"}"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default/object?objectId={{rootFolderId}}&cmisselector=children&succinct=true",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create folder",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 201\"] = responseCode.code === 201;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"var succinctPropertiesObject = jsonData.succinctProperties;",
							"",
							"tests[\"succinctProperties object is present\"] = succinctPropertiesObject !== undefined;",
							"",
							"var objectIdObject = succinctPropertiesObject[\"cmis:objectId\"];",
							"tests[\"cmis:objectId object is present\"] = objectIdObject !== undefined;",
							"",
							"var nameObject = succinctPropertiesObject[\"cmis:name\"];",
							"tests[\"cmis:name object is present\"] = nameObject !== undefined;",
							"",
							"tests[\"cmis:description value is 'Folder created with Postman'\"] = succinctPropertiesObject[\"cmis:description\"] === \"Folder created with Postman\";",
							"",
							"tests[\"cmis:baseTypeId value is 'cmis:folder'\"] = succinctPropertiesObject[\"cmis:baseTypeId\"] === \"cmis:folder\";",
							"",
							"var now = new Date().getTime();",
							"tests[\"cmis:lastModificationDate value is less than now\"] = succinctPropertiesObject[\"cmis:lastModificationDate\"] < now;",
							"",
							"tests[\"cmis:creationDate value is less than now\"] = succinctPropertiesObject[\"cmis:creationDate\"] < now;",
							"",
							"tests[\"cmis:createdBy value is 'system'\"] = succinctPropertiesObject[\"cmis:createdBy\"] === \"system\";",
							"",
							"tests[\"cmis:lastModifiedBy value is 'system'\"] = succinctPropertiesObject[\"cmis:lastModifiedBy\"] === \"system\";",
							"",
							"tests[\"cmis:objectTypeId value is 'cmis:folder'\"] = succinctPropertiesObject[\"cmis:objectTypeId\"] === \"cmis:folder\";",
							"",
							"tests[\"cmis:path value is '/<guid>'\"] = succinctPropertiesObject[\"cmis:path\"] === \"/\" + nameObject;",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default/object?objectId={{rootFolderId}}&succinct=true",
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "cmisaction",
							"value": "createFolder",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyId[0]",
							"value": "cmis:name",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyValue[0]",
							"value": "{{$guid}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyId[1]",
							"value": "cmis:objectTypeId",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyValue[1]",
							"value": "cmis:folder",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyId[2]",
							"value": "cmis:description",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyValue[2]",
							"value": "Folder created with Postman",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create document (custom)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 201\"] = responseCode.code === 201;",
							"",
							"// test response data",
							"var jsonData = JSON.parse(responseBody);",
							"var succinctPropertiesObject = jsonData.succinctProperties;",
							"",
							"tests[\"succinctProperties object is present\"] = succinctPropertiesObject !== undefined;",
							"",
							"var objectIdObject = succinctPropertiesObject[\"cmis:objectId\"];",
							"tests[\"cmis:objectId object is present\"] = objectIdObject !== undefined;",
							"",
							"var nameObject = succinctPropertiesObject[\"cmis:name\"];",
							"tests[\"cmis:name object is present\"] = nameObject !== undefined;",
							"",
							"var streamIdObject = succinctPropertiesObject[\"cmis:contentStreamId\"];",
							"tests[\"cmis:contentStreamId object is present\"] = streamIdObject !== undefined;",
							"",
							"var streamFileName = succinctPropertiesObject[\"cmis:contentStreamFileName\"];",
							"tests[\"cmis:contentStreamFileName object is present\"] = streamFileName !== undefined;",
							"",
							"tests[\"cmis:description value is 'Document created with Postman'\"] = succinctPropertiesObject[\"cmis:description\"] === \"Document created with Postman\";",
							"",
							"tests[\"cmis:baseTypeId value is 'cmis:document'\"] = succinctPropertiesObject[\"cmis:baseTypeId\"] === \"cmis:document\";",
							"",
							"var now = new Date().getTime();",
							"tests[\"cmis:lastModificationDate value is less than now\"] = succinctPropertiesObject[\"cmis:lastModificationDate\"] < now;",
							"",
							"tests[\"cmis:creationDate value is less than now\"] = succinctPropertiesObject[\"cmis:creationDate\"] < now;",
							"",
							"tests[\"cmis:createdBy value is 'system'\"] = succinctPropertiesObject[\"cmis:createdBy\"] === \"system\";",
							"",
							"tests[\"cmis:lastModifiedBy value is 'system'\"] = succinctPropertiesObject[\"cmis:lastModifiedBy\"] === \"system\";",
							"",
							"tests[\"cmis:objectTypeId value is 'cmis:document'\"] = succinctPropertiesObject[\"cmis:objectTypeId\"] === \"cmis:document\";",
							"",
							"tests[\"cmis:contentStreamMimeType value is 'text/plain'\"] = succinctPropertiesObject[\"cmis:contentStreamMimeType\"] === \"text/plain\";",
							"",
							"tests[\"cmis:contentStreamLength value is '20'\"] = succinctPropertiesObject[\"cmis:contentStreamLength\"] === 20;",
							"",
							"// store the document id ",
							"postman.setGlobalVariable(\"documentId\", objectIdObject);"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default/object?objectId={{rootFolderId}}&succinct=true",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic dGVzdDp0ZXN0",
						"description": ""
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "cmisaction",
							"value": "createDocument",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyId[0]",
							"value": "cmis:name",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyValue[0]",
							"value": "{{$guid}}.txt",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyId[1]",
							"value": "cmis:objectTypeId",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyValue[1]",
							"value": "cmis:document",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyId[2]",
							"value": "cmis:description",
							"type": "text",
							"enabled": true
						},
						{
							"key": "propertyValue[2]",
							"value": "Document created with Postman",
							"type": "text",
							"enabled": true
						},
						{
							"key": "content",
							"value": "This is some content",
							"type": "text",
							"enabled": true
						},
						{
							"key": "mimeType",
							"value": "text/plain",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Get content",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"body matches string\"] = responseBody.has(\"This is some content\");"
						]
					}
				}
			],
			"request": {
				"url": "{{host}}{{stage}}/default/object?objectId={{documentId}}&cmisselector=content",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		}
	]
}